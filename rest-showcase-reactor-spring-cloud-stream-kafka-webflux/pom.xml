<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.c4soft.showcase.rest</groupId>
        <artifactId>rest-showcase-parent</artifactId>
        <version>0.0.1-SNAPSHOT</version>
        <relativePath>..</relativePath>
    </parent>
    <artifactId>rest-showcase-reactor-spring-cloud-stream-kafka-webflux</artifactId>
    <description>WebFlux app with reactive Spring Cloud Stream Kafka, with OIDC and REST OAuth2 Client</description>
    <properties>
        <!-- DEPENDENCIES-->
        <testcontainers-keycloak.version>3.6.0</testcontainers-keycloak.version>
        <wiremock-spring-boot.version>3.6.0</wiremock-spring-boot.version>
        <spring-cloud.version>2024.0.0</spring-cloud.version>

        <!--     OPENAPI -->
        <open-api-generator.apiClientSuffix>Client</open-api-generator.apiClientSuffix>
        <open-api-generator.chronos.spec>${project.basedir}/api/chronos.yaml</open-api-generator.chronos.spec>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- Spring Cloud -->
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>${spring-cloud.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <dependencies>
        <!--     SECURITY -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-security</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-oauth2-client</artifactId>
        </dependency>
        <dependency>
            <groupId>com.c4-soft.springaddons</groupId>
            <artifactId>spring-addons-starter-oidc</artifactId>
            <version>${spring-addons.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-docker-compose</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-webflux</artifactId>
        </dependency>
        <dependency>
            <groupId>com.c4-soft.springaddons</groupId>
            <artifactId>spring-addons-starter-rest</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <!-- EVENTS -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-stream-binder-kafka</artifactId>
        </dependency>
        <!--  TESTING  -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-testcontainers</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.testcontainers</groupId>
            <artifactId>kafka</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.github.dasniko</groupId>
            <artifactId>testcontainers-keycloak</artifactId>
            <version>${testcontainers-keycloak.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.wiremock.integrations</groupId>
            <artifactId>wiremock-spring-boot</artifactId>
            <version>${wiremock-spring-boot.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.openapitools</groupId>
                <artifactId>openapi-generator-maven-plugin</artifactId>
                <configuration>
                    <modelNameSuffix>DTO</modelNameSuffix>
                    <removeOperationIdPrefix>true</removeOperationIdPrefix>
                    <skipIfSpecIsUnchanged>true</skipIfSpecIsUnchanged>
                    <generateApiTests>false</generateApiTests>
                    <generateModelTests>false</generateModelTests>
                    <configOptions>
                        <skipDefaultInterface>true</skipDefaultInterface>
                        <useSpringBoot3>true</useSpringBoot3>
                        <useJakartaEe>true</useJakartaEe>
                        <useTags>true</useTags>
                        <useEnumCaseInsensitive>true</useEnumCaseInsensitive>
                        <openApiNullable>false</openApiNullable>
                        <useOneOfInterfaces>true</useOneOfInterfaces>
                    </configOptions>
                </configuration>
                <executions>
                    <execution>
                        <id>generateChronosClient</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <apiNameSuffix>${open-api-generator.apiClientSuffix}</apiNameSuffix>
                            <apiPackage>generated.${project.parent.groupId}.infrastructure.rest.chronos</apiPackage>
                            <generateApiTests>false</generateApiTests>
                            <generateModelTests>false</generateModelTests>
                            <generatorName>java</generatorName>
                            <inputSpec>${open-api-generator.chronos.spec}</inputSpec>
                            <invokerPackage>generated.${project.parent.groupId}.infrastructure.rest.chronos.invoker
                            </invokerPackage>
                            <library>webclient</library>
                            <modelNamePrefix>Chronos</modelNamePrefix>
                            <modelPackage>generated.${project.parent.groupId}.infrastructure.rest.chronos.model
                            </modelPackage>
                        </configuration>
                    </execution>
                    <execution>
                        <id>generateChronosClientMock</id>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                        <configuration>
                            <addCompileSourceRoot>false</addCompileSourceRoot>
                            <addTestCompileSourceRoot>true</addTestCompileSourceRoot>
                            <apiNameSuffix>Chronos</apiNameSuffix>
                            <apiPackage>integration.utils.wiremock.chronos</apiPackage>
                            <generatorName>java-wiremock</generatorName>
                            <inputSpec>${open-api-generator.chronos.spec}</inputSpec>
                            <configOptions>
                                <sourceFolder>src/test/java</sourceFolder>
                            </configOptions>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>add-openapi-generator-test-sources</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.build.directory}/generated-sources/openapi/src/test/java</source>
                            </sources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
